#! /bin/sh
##################################################################

#  radioplay by MattRock <matt@mattrock.net>
#  Modified by <glyman3@gmail.com> to do local save only, auto-purge files
#  and optionally save copy of audio with dead air removed and sped up
#  THIS FILE: /usr/local/bin/radioplay
#  No Warranty is implied, promised or permitted.

# Note that radioplay needs to be run as root since Darkice needs to run as root.

#  File Locations for Raspberry Pi (Debian based)

# /usr/local/bin/radioplay		(this file)
# /etc/radioplay/radioplay.conf   	(configuration file)
# /etc/init.d/darkice			(darkice.init file)
# /etc/darkice.cfg			(darkice config)

#  Add the following line to root's crontab (via sudo crontab -e):
#       00 * * * *   [ -x /usr/local/bin/radioplay ] && /usr/local/bin/radioplay cron > /dev/null
#   This will create an archive every hour on the hour.

# Create these Folders if they don't exist:
# /etc/radioplay
# /var/lib/radioplay
# and whatever archive folder you list below as ARCHIVE_FOLDER

# Darkice, when installed as a package does not come with an init script.  The included init script
# (/etc/init.d/darkice) by Matt Rock can be used
# use command: /etc/init.d/darkice
#	with one argument from this list: start|stop|restart|reload|force-reload

#  Note that if system is rebooted then the next file save will only include from the time of
#  reboot (or system start) to the top of the hour (or time cron last ran).

# This script can use SCP to post the finished file to a Drupal server.  In order to
# do this, it is necessary to set up SSH keyfiles to prevent SCP from asking for a
# password.  The simplest method to do this is to execute the following command
# as root from the Darkice machine:

# scp /root/.ssh/id_rsa.pub {user}@{remote_host}:.ssh/authorized_keys

# This will ask you to verify the fingerprint and ask for a password for the remote.
# Once this command is successful, you should be able to SSH -l {username} {remote_host}
# to the remote machine without being challenged with a password.  Now radioplay should
# be able to push the files to your Drupal Station.Archive import folder.
# Then uncomment the appropriate line in this script

###################  >>> ENJOY !    ################################
####################################################################
# PATH added in case it is not set when cron runs @reboot
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:
CONFIGFILE=/etc/radioplay/radioplay.conf  # << Make config changes in this file

#  In normal usage no changes should be made below...
PID=`cat /var/run/darkice.pid`
LIBDIR=/var/lib/radioplay
RPINDEX=`cat /var/lib/radioplay/radioplay.index`
DPINDEX=`cat /var/lib/radioplay/drupalplay.index`
UNIXTIME=`date +%s`
TIMESTAMP=`date +%F-%a-%H%M`


# Check and load the conf file
[ -f "$CONFIGFILE" ] && . $CONFIGFILE

# Don't allow disk use above 90% regardless of what is in conf file...
#  if you use seperate partitions then you might be able to use more than 90
	if [ $DISK_CAP -gt "90" ] ; then DISK_CAP=90 ;  fi

# Check for a prep command

case "$1" in
	init)
	echo -n "Initializing radioplay \n"
	echo $TIMESTAMP > $LIBDIR/radioplay.index
	echo $UNIXTIME > $LIBDIR/drupalplay.index
	[ -f /tmp/radioplay_active.mp3 ] && sudo chmod 644 /tmp/radioplay_active.mp3
	;;

	cron)
	echo "$LIBDIR/$RPINDEX.mp3" > /tmp/darkice.file-0.$PID
	kill -s 10 $PID
	echo $TIMESTAMP > $LIBDIR/radioplay.index
	echo $UNIXTIME > $LIBDIR/drupalplay.index
	sleep 5
	/usr/bin/id3v2 --artist "$ID3V2ARTIST" --album "$ID3V2ALBUM" --song "$ID3V2SONG" --year "$ID3V2YEAR" --comment "$ID3V2DESC" $LIBDIR/$RPINDEX.mp3

	if [ "$SAVETYPE" = "all" -o "$SAVETYPE" = "full" ]
	then # save full recording
		cp $LIBDIR/$RPINDEX.mp3 $ARCHIVE_FOLDER/
		chmod 644 $ARCHIVE_FOLDER/$RPINDEX.mp3
		chown $ARCHIVE_FOLDER_OWNER:$ARCHIVE_FOLDER_OWNER $ARCHIVE_FOLDER/$RPINDEX.mp3
		# upload full to Dropbox
		[ $USEDROPBOX = "yes" ] && sudo -u pi $DBSCRIPT upload $LIBDIR/$RPINDEX.mp3 /$RPINDEX.mp3
	fi

	if [ "$SAVETYPE" = "all" -o "$SAVETYPE" = "trim" ]
		then # save trimmed recording
		sox $LIBDIR/$RPINDEX.mp3 "$ARCHIVE_FOLDER/$RPINDEX"_Anytown_trimmed.mp3 \
			silence -l 1 0.1 $THSHOLD -1 1.0 $THSHOLD tempo $TEMPO
		chmod 644 "$ARCHIVE_FOLDER/$RPINDEX"_Anytown_trimmed.mp3
		chown $ARCHIVE_FOLDER_OWNER:$ARCHIVE_FOLDER_OWNER "$ARCHIVE_FOLDER/$RPINDEX"_Anytown_trimmed.mp3
		# upload trim to Dropbox
		[ $USEDROPBOX = "yes" ] && sudo -u pi $DBSCRIPT upload "$ARCHIVE_FOLDER/$RPINDEX"_Anytown_trimmed.mp3 "/$RPINDEX"_Anytown_trimmed.mp3
	fi

	rm $LIBDIR/$RPINDEX.mp3 && rm /tmp/darkice.file-0.$PID # cleanup

#  Uncomment the following if uploading the file...
       	#  scp $LIBDIR_FOLDER/$RPINDEX.mp3 $REMOTEUSER@$REMOTESITE:$REMOTEFOLDER/$DPINDEX.mp3

# File purge added 7Feb2013  ##############################################################
# REQUIRES (from /etc/radioplay/radioplay.conf):
#       ARCHIVE_FOLDER
#       ARCHIVE_AGE: Max number of minutes to keep recordings
#       DISK_CAP: Max allowed disk use (percentage) for partition where archive folder resides

# first purge recording files that are older than our max age for them...

	find $ARCHIVE_FOLDER -iname '*.mp3' -mmin +$ARCHIVE_AGE -print0 | xargs -0 --no-run-if-empty  /bin/rm

# next delete some more if we need the disk space AND there are some to delete...

	while  [ $DISK_CAP -lt `df -H $ARCHIVE_FOLDER | sed '1d' | awk '{print $5}' | cut -d'%' -f1` ] && \
		[ "$(find $ARCHIVE_FOLDER -maxdepth 1 -name '*.mp3' -print -quit)" ]
	do
	        rm $(ls -tr $ARCHIVE_FOLDER/*.mp3 | head -n 1)
	done
#  END of file purge

	[ -f /tmp/radioplay_active.mp3 ] && sudo chmod 644 /tmp/radioplay_active.mp3 # allow copying of active recording
	;;

	*)
	echo "Usage: $0 {init|cron}" >&2
        exit 1
	;;
esac

exit 0
